from flask import Flask, render_template, request, redirect, url_for
import requests
import os
import pickle
import pefile
import numpy as np
from werkzeug.utils import secure_filename
from os.path import join, dirname, realpath
from os import unlink

# Creating app object
app = Flask(__name__)

# Upload folder
UPLOAD_FOLDER = './static/files'
app.config['UPLOAD_FOLDER'] = UPLOAD_FOLDER


def pe_info_extract(file_name):
    file_to_check = pefile.PE(f'{UPLOAD_FOLDER}/{file_name}')
    # file_to_check.print_info()
    entry_point = file_to_check.OPTIONAL_HEADER.AddressOfEntryPoint
    dll = file_to_check.OPTIONAL_HEADER.DllCharacteristics
    input_array = []
    input_array.append(entry_point)
    input_array.append(dll)
    check_data = np.array([input_array])
    return check_data


# Loading the trained model(pickle file)
model = pickle.load(open('models/model.pkl', 'rb'))

# enable debugging mode
app.config["DEBUG"] = True


# Root url
# route() decorator to tell Flask what url should trigger the functions
@app.route("/")
def home():
    return render_template("index.html")


# Get the uploaded files
@app.route('/upload', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        f = request.files['file']
        file_name = secure_filename(f.filename)
        print('Folder name', os.listdir(UPLOAD_FOLDER))
        myfile = f'{UPLOAD_FOLDER}/{file_name}'
        f.save(myfile)
        # getting info from pe file
        try:
            pe_data = pe_info_extract(file_name)
            prediction = model.predict(pe_data)
        except pefile.PEFormatError as error:
            print(error)
            prediction = 2
        return render_template("post.html", prediction=prediction)


if __name__ == '__main__':
    app.run(debug=True)
